name: Build Containers for Prod & Push to Dockerhub

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build-and-deploy-front:
    name: Build and Deploy FrontEnd
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml
      - name: Get dependencies
        run: flutter pub get
      - name: Build Web
        run: flutter build web --source-maps --dart-define=API_HOST=${{ secrets.API_HOST }}
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/puttputtpal-front:latest
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H '${{ secrets.DIGITAL_OCEAN_IP }}' >> ~/.ssh/known_hosts
      - name: Copy docker-compose.yml to Droplet
        run: |
          scp ./docker-compose-front.yml root@${{ secrets.DIGITAL_OCEAN_IP }}:/root/devops/docker-compose-front.yml
      - name: SSH and Docker Compose Up frontend
        run: |
          ssh root@${{ secrets.DIGITAL_OCEAN_IP }} 'cd /root/devops && docker compose -f docker-compose-front.yml down && docker compose -f docker-compose-front.yml pull && docker compose -f docker-compose-front.yml up -d'
      - name: SSH and Docker Compose Up proxy
        run: |
          ssh root@${{ secrets.DIGITAL_OCEAN_IP }} 'cd /root/devops && docker compose -f docker-compose-proxy.yml down && docker compose -f docker-compose-proxy.yml up -d'
  build-and-deploy-ios:
    name: Build and Deploy iOS
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml

      - name: Install Dependencies
        run: flutter pub get

      - name: Build iOS
        run: flutter build ios --release --no-codesign --dart-define=API_HOST=${{ secrets.API_HOST }}

      - name: Install Fastlane
        run: sudo gem install fastlane -NV

      - name: Set up Keychain
        run: |
          security create-keychain -p "temp" build.keychain
          security set-keychain-settings -lut 21600 build.keychain
          security unlock-keychain -p "temp" build.keychain
          security import ./ios/Certificates.p12 -k build.keychain -P ${{ secrets.P12_PASSWORD }} -T /usr/bin/codesign
          security list-keychains -d user -s build.keychain
          security set-key-partition-list -S apple-tool:,apple: -s -k temp build.keychain

      - name: Build and Deploy to TestFlight
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
        run: |
          cd ios
          fastlane beta

      - name: Clean Up Keychain
        run: security delete-keychain build.keychain
